[{
  "tag": "H1",
  "text": "Time Series DB are getting momentum!",
  "translation": "时间序列数据库正在发展！"
}, {
  "tag": "P",
  "text": "While celebrating each new year, it’s often customary to look for the past year in the mirror. Specialised DB-Engines website did the exercice earlier this year and elected PostgreSQL the RDBMS of the year 2017. Well deserved Postgre!",
  "translation": "庆祝新的一年时，通常习惯照镜子。 专门的DB-Engines网站在今年早些时候进行了培训，并选举PostgreSQL为2017年RDBMS。当之无愧的Postgre！"
}, {
  "tag": "P",
  "text": "DB-Engines tries to rank every single database whatever their use case or model, so it’s no surprise that relational databases are culminating at the top of the ranking. There are many kind of databases that address different use cases :",
  "translation": "DB-Engines会尝试对每个数据库（无论其用例或模型）进行排名，因此关系数据库在排名中居于首位也就不足为奇了。 有许多数据库可以解决不同的用例："
}, {
  "tag": "UL",
  "texts": ["Relational DB (PostgreSQL, MariaDB)", "Document Stores (MongoDB, CouchDB)", "Key/Value Stores (Redis, RocksDB)", "Column Stores (HBase, Cassandra)", "Search engines (Solr, Elasticsearch)", "Graph DBMS (Neo4J, JanusGraph)", "Time Series DBMS (Prometheus, Influxdb)", "and others…"],
  "translations": ["关系数据库（PostgreSQL，MariaDB）", "文档存储（MongoDB，CouchDB）", "键/值存储（Redis，RocksDB）", "列存储（HBase，Cassandra）", "搜索引擎（Solr，Elasticsearch）", "图DBMS（Neo4J，JanusGraph）", "时间序列DBMS（Prometheus，Influxdb）", "和别的…"]
}, {
  "tag": "P",
  "text": "What is also interesting in the last DB-Engines post is that Time Series DBMS consecutively scored a second year with the strongest growth among all others.",
  "translation": "在上一篇DB-Engines帖子中，还有趣的是，时间序列DBMS连续第二年获得了最强劲的增长，排名第二。"
}, {
  "tag": "H1",
  "text": "Time Series DBs increased their score by about 70%",
  "translation": "时间序列数据库的分数提高了约70％"
}, {
  "tag": "P",
  "text": "Among all kind of databases, Time Series are the category with strongest growth. This category was identified as a trend since mid-2015 and it has started to show off since early 2016.",
  "translation": "在所有类型的数据库中，时间序列是增长最快的类别。 自2015年中以来，这一类别已被确定为一种趋势，并且自2016年初以来就开始炫耀。"
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/60/1*H7Dzpa0sRtRUO2PguF4ALQ.png?q=20",
  "type": "image",
  "file": "1!H7Dzpa0sRtRUO2PguF4ALQ.png"
}, {
  "tag": "P",
  "text": "While being the strongest trend, Time Series interest is young and still it hasn’t gain the same adoption than Relational Databases or others but it’s only time before every developer stack include a metrics solution. In any case, the Time Series Database field is currently booming with new solutions, projects, contributions and tools. At OVH, we participate in this effort by contributing to projects like Noderig, Beamium, Warp10, Grafana plugins, and others.",
  "translation": "时间序列虽然是最流行的趋势，但对时间序列的兴趣还很年轻，但采用率却没有与关系数据库或其他数据库相同，但这只是每个开发人员堆栈都包含指标解决方案的时间。 无论如何，“时间序列数据库”领域目前正在蓬勃发展，其中包括新的解决方案，项目，贡献和工具。 在OVH，我们通过参与Noderig，Beamium，Warp10，Grafana插件等项目来参与这项工作。"
}, {
  "tag": "P",
  "text": "But why should you care about Time Series?",
  "translation": "但是，为什么要关心时间序列？"
}, {
  "tag": "H1",
  "text": "Measuring is all about taking better decisions",
  "translation": "衡量就是做出更好的决定"
}, {
  "tag": "P",
  "text": "Time Series are used to track changes over time. It also provides a factual way to express a feeling by measuring things.",
  "translation": "时间序列用于跟踪随时间的变化。 它还提供了一种通过测量事物来表达感觉的事实方法。"
}, {
  "tag": "P",
  "text": "“If we have data, let’s look at data. If all we have are opinions, let’s go with mine.”",
  "translation": "“如果有数据，我们来看一下数据。 如果我们只有意见，那就和我一起去吧。”"
}, {
  "tag": "P",
  "text": "Jim Barksdale, former Netscape CEO",
  "translation": "Netscape前首席执行官Jim Barksdale"
}, {
  "tag": "P",
  "text": "I think this quote clearly translates the idea behind Time Series adoption : measuring.",
  "translation": "我认为这句话清楚地表达了采用时间序列的思想：衡量。"
}, {
  "tag": "P",
  "text": "To synthesize Coda Hale presentation, measuring :",
  "translation": "要合成Coda Hale演示文稿，请进行以下测量："
}, {
  "tag": "UL",
  "texts": ["costs nothing to be added in developer code", "help you understand how your code runs in production, so as your business", "improves your mental model about your business", "optimises the way you think", "help take better decisions"],
  "translations": ["无需在开发人员代码中添加任何内容", "帮助您了解代码在生产中的运行方式，以及您的业务", "改善您关于业务的思维模式", "优化您的思维方式", "帮助做出更好的决定"]
}, {
  "tag": "P",
  "text": "Fixing code is a business driven decision. Servers running fine is a business driven decision. Developing a feature is a business driven decision. Measuring application code and infrastructure, helps you understand your business, and opens a data driven business, based on measurable KPIs which at the end, allows taking better decisions for your business.",
  "translation": "修复代码是业务驱动的决策。 服务器运行良好是业务驱动的决定。 开发功能是业务驱动的决策。 测量应用程序代码和基础架构，可以帮助您了解您的业务，并基于可衡量的KPI来打开数据驱动的业务，最后，KPI可以为您的业务做出更好的决策。"
}, {
  "tag": "P",
  "text": "What changed since early 2010s so that the landscape has been changed significantly?",
  "translation": "自2010年代初以来发生了什么变化，因此形势发生了重大变化？"
}, {
  "tag": "H1",
  "text": "A growing popularity!",
  "translation": "越来越受欢迎！"
}, {
  "tag": "P",
  "text": "As listed by DB-Engines, many kind of data are actually Time Series data. A quick overview for example :",
  "translation": "如DB-Engines列出的，许多数据实际上是时间序列数据。 快速概述，例如："
}, {
  "tag": "UL",
  "texts": ["sensors measurements (water cooling, presence, …)", "monitoring data (CPU, memory, disks, …)", "stock exchange (Euros, Dollars, Bitcoins)", "ressource consumption (fuel, …)", "events, stats, signals (time spent, …)", "IoT data (parking occupancy, energy grid, …)", "Health (heart rate, …)", "and many others, basically any data that can be visualised as a charts"],
  "translations": ["传感器测量（水冷却，存在等）", "监视数据（CPU，内存，磁盘等）", "股票交易所（欧元，美元，比特币）", "资源消耗（燃料，…）", "事件，统计信息，信号（花费的时间，...）", "物联网数据（停车人数，能源网格等）", "健康（心率，...）", "和许多其他数据，基本上任何可以可视化为图表的数据"]
}, {
  "tag": "P",
  "text": "In all these domains, collecting data offers many benefits regarding resources optimisations, tracking, forecasting, business intelligence, …",
  "translation": "在所有这些领域中，收集数据在资源优化，跟踪，预测，商业智能等方面都带来许多好处。"
}, {
  "tag": "P",
  "text": "Since early 2010s, many things happened. First Graphite has matured since its first inception in 2008. By the time, many Time Series use cases where implemented inside traditional databases like MySQL or PostgresSQL but as the volume of data has rapidly grown, these databases couldn’t handle this kind of workload. OpenTSDB has been released in 2010 with significant improvement from Graphite and its flat data model. OpenTSDB was based on HBase, which pushed back many limits. From there, new use cases started to be implemented, mostly for monitoring purpose but other projects has also been pushed into a proper Time Series model. Then other projects entered in the game, KairosDB, InfluxDB, Prometheus and Riak TS to name a few of them. Today, modern Time Series platforms combine more functionalities than just plotting charts and some of them have become true analytics platforms like Warp10.",
  "translation": "自2010年代初以来，发生了很多事情。 First Graphite自2008年成立以来就已经成熟。到那时，许多时间序列用例都在传统数据库（如MySQL或PostgresSQL）中实现，但随着数据量的快速增长，这些数据库无法处理此类工作量。 OpenTSDB已于2010年发布，对Graphite及其平面数据模型进行了重大改进。 OpenTSDB是基于HBase的，它推了许多限制。 从那里开始，开始实施新的用例，主要用于监视目的，但其他项目也已推入适当的时间序列模型。 然后，其他项目进入了游戏，例如KairosDB，InfluxDB，Prometheus和Riak TS等。 如今，现代时间序列平台结合了更多功能，而不仅仅是绘制图表，其中一些功能已成为真正的分析平台，例如Warp10。"
}, {
  "tag": "H1",
  "text": "Trend over Time Series DBMS popularity",
  "translation": "时间序列DBMS流行趋势"
}, {
  "tag": "P",
  "text": "Many solutions exists on the market to satisfy different criteria and choose the right one can be challenging :",
  "translation": "市场上有许多解决方案可以满足不同的标准，选择正确的解决方案可能会具有挑战性："
}, {
  "tag": "UL",
  "texts": ["Distribution : Open Source, Open Core, Proprietary", "Source language : Java, Golang, Python, Erlang, …", "Versatility : distributed, standalone, embedded", "Data model : modern, flat, metric/tags, text", "Data storage : full resolution vs fixed database", "Supported data types : Integers, Floats, Booleans, Strings", "Query model : interactive, job, MapReduce", "Analytics : server side functions, SDK, custom"],
  "translations": ["发行：开源，开放核心，专有", "源语言：Java，Golang，Python，Erlang等", "多功能性：分布式，独立，嵌入式", "数据模型：现代，平面，公制/标签，文本", "数据存储：全分辨率与固定数据库", "支持的数据类型：整数，浮点数，布尔值，字符串", "查询模型：交互式，作业，MapReduce", "分析：服务器端功能，SDK，自定义"]
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/60/1*lQ4iI7CsMctaHCyAtlXH_w.png?q=20",
  "type": "image",
  "file": "1!lQ4iI7CsMctaHCyAtlXH_w.png"
}, {
  "tag": "P",
  "text": "Trends are important, but not the only criteria, measuring the ecosystem is also interesting. Ecosystem includes aspects like libraries compliancy, contributions, adoption by other projects, protocol compatibility and usability, project roadmap and more.",
  "translation": "趋势很重要，但不是唯一标准，衡量生态系统也很有趣。 生态系统包括诸如图书馆合规性，贡献，被其他项目采用，协议兼容性和可用性，项目路线图等方面。"
}, {
  "tag": "P",
  "text": "At OVH Metrics we have extensively tested and worked with many Time Series Databases, and in this posts we want to give you a quick feedback with our feeling on a few of them:",
  "translation": "在OVH Metrics中，我们已经对许多时间序列数据库进行了广泛的测试并与之合作，在这些帖子中，我们希望对您对其中的一些感觉提供快速反馈："
}, {
  "tag": "H2",
  "text": "InfluxDB",
  "translation": "InfluxDB"
}, {
  "tag": "P",
  "text": "According to DB-Engines report, InfluxDB is the current leader in the Time Series Database field. This leading position can be easily explained: InfluxDB is here since late 2014, and its Open Core model, its single binary distribution and a well thought community approach have greatly helped to give them a large adoption, specially for small projects.",
  "translation": "根据DB-Engines的报告，InfluxDB是“时间序列数据库”领域的当前领导者。 这个领先地位很容易解释：自2014年底以来，InfluxDB就在这里，其Open Core模型，单一二进制分发版本和周到的社区方法极大地帮助了他们，尤其是在小型项目中。"
}, {
  "tag": "P",
  "text": "InfluxDB has consistently improved over the years, iteratively rebuilding its storage layer to fix lots of early problems. Two main issues still limit its usefulness for big projects: the not-stellar performance of Kapacitor, the components used to run continuous queries (we name this Loops at OVH Metrics), and a consequent slowness when using authentication.",
  "translation": "多年来，InfluxDB一直在不断改进，不断地重建其存储层以解决许多早期问题。 两个主要问题仍然限制了它对大型项目的实用性：Kapacitor的性能不佳，用于运行连续查询的组件（我们将其称为OVH Metrics的Loops）以及使用身份验证时的缓慢性。"
}, {
  "tag": "P",
  "text": "Originally InfluxDB proposed a SQL like query syntax, that we don’t think is the best syntax when dealing with Time Series model. More recently, Influx has published an interesting language that could combine both simple queries and data flow : IFQL. We don’t have yet any feedback on using IFQL in large projects, with their associated challenges.",
  "translation": "最初，InfluxDB提出了一种类似SQL的查询语法，在处理时间序列模型时，我们认为这不是最好的语法。 最近，Influx发布了一种有趣的语言，它可以将简单的查询和数据流结合在一起：IFQL。 对于在大型项目中使用IFQL及其相关挑战，我们还没有任何反馈。"
}, {
  "tag": "H2",
  "text": "Graphite",
  "translation": "石墨"
}, {
  "tag": "P",
  "text": "As the eldest of the Time Series DB field, Graphite has lost a bit of its popularity, as the younger tools propose more features in fancier ways. Graphite offers a rather complete functions set to manipulate a data set, even if its original data model was rather limiting, with a flat dot-separated metrics naming. This naming strategy made more difficult to build complex queries, with regular expression to match for the desired selection, but at the time, it was fine and offered many features for small volumes.",
  "translation": "作为“时间序列”数据库领域中的老大，由于较年轻的工具以更新颖的方式提出了更多功能，因此Graphite失去了一定的知名度。 Graphite提供了相当完整的功能集来操作数据集，即使其原始数据模型相当局限，也使用扁平的点分隔度量标准命名。 这种命名策略使构建复杂的查询变得更加困难，因为要使用正则表达式来匹配所需的选择，但当时还不错，并且为小批量提供了许多功能。"
}, {
  "tag": "P",
  "text": "For some years the project slowly declined, without any major evolution. But in the last months, Graphite has received a new surge of interest with new features as storing data using tags, joining other modern data models.",
  "translation": "几年来，该项目缓慢下降，没有任何重大进展。 但是在过去的几个月中，Graphite受到了新的关注，其新功能包括使用标签存储数据以及加入其他现代数据模型。"
}, {
  "tag": "H2",
  "text": "OpenTSDB",
  "translation": "OpenTSDB"
}, {
  "tag": "P",
  "text": "Inspired by Borgmon (the Google internal monitoring tool), OpenTSDB was the first open-source Time Series DB to propose a modern data model: each time series is defined by a metric name and a list of tags.",
  "translation": "受Borgmon（Google内部监控工具）的启发，OpenTSDB是第一个提出现代数据模型的开源时间序列数据库：每个时间序列均由度量标准名称和标签列表定义。"
}, {
  "tag": "P",
  "text": "Scalability being one of the main tenants of OpenTSDB, it uses HBase as storage engine. That means that in order to use it you need to install and manage a Hadoop cluster with HBase, so its deployment isn’t exactly easy. OpenTSDB was massively used at OVH before switching to OVH Metrics.",
  "translation": "可伸缩性是OpenTSDB的主要租户之一，它使用HBase作为存储引擎。 这意味着要使用它，您需要使用HBase安装和管理Hadoop集群，因此部署起来并不容易。 在切换到OVH指标之前，OpenTSDB在OVH中得到了广泛使用。"
}, {
  "tag": "H2",
  "text": "Prometheus",
  "translation": "普罗米修斯"
}, {
  "tag": "P",
  "text": "Prometheus is a Borgmon copycat and one of the main InfluxDB challengers. If their current trend continues, Prometheus format could evolve to become a de facto monitoring standard in a foreseeable future. Evolving from a pure in-memory Time Series database, Prometheus has added a storage layer and can be used as a persistent store. Still it’s not available as a distributed solution so it neither will scale for high workload nor offer high-availability.",
  "translation": "Prometheus是Borgmon的模仿者，也是InfluxDB的主要挑战者之一。 如果他们的当前趋势继续下去，普罗米修斯格式可以在可预见的将来发展成为事实上的监控标准。 从纯粹的内存时间序列数据库演变而来，Prometheus添加了一个存储层，可以用作持久性存储。 它仍然无法作为分布式解决方案使用，因此既无法扩展以适应高工作负载，也无法提供高可用性。"
}, {
  "tag": "P",
  "text": "Prometheus is more analytics oriented than the precedent solutions, with a query language, PromQL. While PromQL is more complete than OpenTSDB, it still lack many functions to be used as an analytical Time Series platform. Inside Google many people disliked Borgmon due to its language syntax and the fact that it wasn’t a service, each team needing to deploy and manage its own Borgmon. Prometheus, as a Borgmon clone, unfortunately shares the same flaws. It’s worth to note that since then Google has switched to Monarch, a metrics service like @OvhMetrics.",
  "translation": "与以前的解决方案相比，Prometheus更加面向分析，它使用一种查询语言PromQL。 尽管PromQL比OpenTSDB更完整，但它仍然缺少用作分析时间序列平台的许多功能。 在Google内部，由于Borgmon的语言语法以及它不是服务的事实，许多人不喜欢Borgmon，每个团队都需要部署和管理自己的Borgmon。 不幸的是，作为Borgmon克隆的Prometheus也存在相同的缺陷。 值得一提的是，自那时以来，Google已切换到Monarch，这是@OvhMetrics之类的指标服务。"
}, {
  "tag": "P",
  "text": "At OVH, we integrate with the Prometheus ecosystem by providing custom exporter, and we developed the Beamium scraper, that proposes metrics pushing (instead of pulling) and fine grained authentication, and offers a DFO (Disk Fail Over) in case of network issues.",
  "translation": "在OVH，我们通过提供自定义导出器与Prometheus生态系统集成，并开发了Beamium刮板，该刮板提出了指标推送（而不是拉取）和细粒度身份验证的功能，并在出现网络问题时提供了DFO（磁盘故障转移）。"
}, {
  "tag": "H2",
  "text": "Warp 10",
  "translation": "经线10"
}, {
  "tag": "P",
  "text": "Warp 10 takes its origins from Borgmon like OpenTSDB but in addition to its APIs, it provides a rich data manipulation framework called WarpScript containing hundreds of functions. From this point of view, it’s the only challenger to Graphite and its large library.",
  "translation": "Warp 10像OpenTSDB一样起源于Borgmon，但除了其API外，它还提供了一个称为WarpScript的丰富数据处理框架，其中包含数百个功能。 从这个角度来看，它是Graphite及其大型图书馆的唯一挑战者。"
}, {
  "tag": "P",
  "text": "Warp 10 supports several storage engines, with a standalone version storing on LevelDB and a distributed one relying upon HBase like OpenTSDB. Its data model being somewhat more flexible than OpenTSDB one, Warp 10 solves the scalability issues that we observed in OpenTSDB for very large datasets.",
  "translation": "Warp 10支持多个存储引擎，其中一个独立版本存储在LevelDB上，而一个分布式版本则依赖于OpenBase等HBase。 它的数据模型比OpenTSDB更为灵活，Warp 10解决了我们在OpenTSDB中观察到的非常大的数据集的可伸缩性问题。"
}, {
  "tag": "P",
  "text": "Warp10 has a emerging community and, even if it is still a bit behind in term of user experience, we consider it today as the most mature Open Source technology for operating Time Series at scale. As one of our technologies of choice, we’re contributing tools (Tour, Forge) to the projects to enhance user experience.",
  "translation": "Warp10拥有一个新兴的社区，即使在用户体验方面仍然落后一些，我们今天仍将其视为用于大规模操作时间序列的最成熟的开源技术。 作为我们选择的技术之一，我们正在为项目提供工具（游览，锻造）以增强用户体验。"
}, {
  "tag": "H1",
  "text": "OVH Metrics",
  "translation": "OVH指标"
}, {
  "tag": "P",
  "text": "At Metrics, we think each of these solutions have a different value to offer and it isn’t our role to decide what’s best for you. For a given need, you could be interested by the simplicity of an OpenTSDB or PromQL query, and for another, you could need WarpScript for advanced analytics use cases. This is why we consider our platform to be agnostic on the Query layer, and we’ve implemented some of them to match our customers’ need. Currently, we support :",
  "translation": "在Metrics，我们认为每种解决方案都具有不同的价值，因此决定最适合您的不是我们的职责。 对于给定的需求，您可能对OpenTSDB或PromQL查询的简单性感兴趣，而对于另一个需求，对于高级分析用例，可能需要WarpScript。 这就是为什么我们认为我们的平台在Query层上是不可知的，并且我们已经实施了其中的一些以满足客户的需求。 目前，我们支持："
}, {
  "tag": "UL",
  "texts": ["InfluxDB", "Graphite", "OpenTSDB", "PromQL / Prometheus", "WarpScript / Warp10"],
  "translations": ["InfluxDB", "石墨", "OpenTSDB", "PromQL /普罗米修斯", "WarpScript / Warp10"]
}, {
  "tag": "P",
  "text": "Being agnostic, you can push metrics with a protocol, and query the same metrics with another one. Or query the same metrics twice with two different protocols. This way, there is no vendor lock-in.",
  "translation": "不可知论，您可以使用协议推送指标，并通过另一协议查询相同指标。 或使用两种不同的协议两次查询相同的指标。 这样，就没有供应商锁定。"
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/54/1*uwLWcPRPmQhCRPvhHHERMQ.png?q=20",
  "type": "image",
  "file": "1!uwLWcPRPmQhCRPvhHHERMQ.png"
}, {
  "tag": "P",
  "text": "Working on a Time Series database is hard and full of challenges :",
  "translation": "在时间序列数据库上工作非常艰巨，充满挑战："
}, {
  "tag": "UL",
  "texts": ["Write vs Read patterns", "Dealing with massive cardinality issues", "Dealing with ephemeral Time Series", "Storage Data model design vs generic Query Pattern", "Combine Real Time and Analytical workloads"],
  "translations": ["写与读模式", "处理大量基数问题", "处理短暂时间序列", "存储数据模型设计与通用查询模式", "结合实时和分析工作负载"]
}, {
  "tag": "P",
  "text": "We will publish other posts covering how we answer to these challenges.",
  "translation": "我们还将发布其他帖子，介绍我们如何应对这些挑战。"
}, {
  "tag": "H1",
  "text": "How to start with Time Series?",
  "translation": "如何从时间序列开始？"
}, {
  "tag": "P",
  "text": "If you’re convinced on the need for a Time Series solution, here is are quick first steps to get started :",
  "translation": "如果您确信需要使用时间序列解决方案，那么以下是快速入门的第一步："
}, {
  "tag": "OL",
  "texts": ["Identify your Time Series data or business KPIs", "Instrument your applications to expose these KPIs", "Choose a managed service like OVH Metrics or start with a self operated Open Source solution", "(Optional) Use Noderig or a collector (node-exporter, telegraf, scollector, …) to get infrastructure metrics", "(Optional) Setup Beamium for scraping your app and/or infrastructure metrics", "Set up a dashboard for visualising your KPIs from collected Metrics", "You can now correlate application and infrastructure"],
  "translations": ["识别您的时间序列数据或业务KPI", "检测您的应用程序以暴露这些KPI", "选择诸如OVH Metrics之类的托管服务，或者从自营的开源解决方案开始", "（可选）使用Noderig或收集器（node-exporter，telegraf，scollector等）获取基础结构指标", "（可选）设置Beamium，以抓取您的应用和/或基础架构指标", "设置仪表板以根据收集的指标可视化您的KPI", "您现在可以关联应用程序和基础架构"]
}, {
  "tag": "P",
  "text": "Now you should have a better understanding of your business issues.",
  "translation": "现在，您应该对业务问题有了更好的了解。"
}, {
  "tag": "P",
  "text": "Follow us on twitter: @OvhMetrics . Do you want to work with us on these kind of challenges? Ping us on twitter :)",
  "translation": "在Twitter上关注我们：@OvhMetrics。 您想与我们一起应对此类挑战吗？ 在推特上给我们发信:)"
}, {
  "tag": "PRE",
  "text": "(本文翻译自Steven Le Roux的文章《Time Series DB are getting momentum!》，参考：https://medium.com/ovh-metrics/time-series-db-are-getting-momentum-d0fdda9a47c4)",
  "translation": "（本文翻译自史蒂芬·勒·鲁克斯（Steven Le Roux），《时间序列数据库正在发展！》，参考：https：//medium.com/ovh-metrics/time-series-db-are-getting-momentum-d0fdda9a47c4）"
}]